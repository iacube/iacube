PROCEDURE "IACUBE"."iacube.db.procedures.requisition::getRequisition"(
	IN 	reqId 				INTEGER,
	OUT	details 			"IACUBE"."iacube.db::types.requisitionDetails"	  DEFAULT EMPTY,
	OUT skills				"IACUBE"."iacube.db::types.requisitionSkills"	  DEFAULT EMPTY,
	OUT candidates 			"IACUBE"."iacube.db::types.requisitionCandidates" DEFAULT EMPTY,
	OUT profiles 			"IACUBE"."iacube.db::types.requisitionProfiles"	  DEFAULT EMPTY,
	OUT comments 			"IACUBE"."iacube.db::types.requisitionComments"   DEFAULT EMPTY,

	OUT commentTypes		 "IACUBE"."iacube.db::types.idName"				  DEFAULT EMPTY,
	OUT commentStatusTypes	 "IACUBE"."iacube.db::types.idName"				  DEFAULT EMPTY,
	OUT priorityTypes		 "IACUBE"."iacube.db::types.idName"				  DEFAULT EMPTY,
	OUT statusCodeTypes		 "IACUBE"."iacube.db::types.idName"				  DEFAULT EMPTY,
	OUT statusTypes			 "IACUBE"."iacube.db::types.idName"				  DEFAULT EMPTY,
	OUT subcategoryTypes	 "IACUBE"."iacube.db::types.idName"				  DEFAULT EMPTY
)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA IACUBE
	READS SQL DATA AS
BEGIN

	details = 
		SELECT
				a."ReqId",
				a."Title",
				a."ProjectId",
				a."PriorityId",
				a."Location",
				a."StatusCodeId",
				a."SubcategoryId",
				b."Name" AS "SubcategoryName",
				a."UpdatedBy",
				a."UpdatedAt",
				a."Language",
				a."Keywords",
				a."Description",
				a."OpenedBy",
				a."OpenedAt",
				DAYS_BETWEEN (CURRENT_DATE,ADD_DAYS("OpenedAt",c."Days")) AS "DaysRemain"
			FROM "iacube.db::tables.Requisition.Requisitions" AS a
			LEFT JOIN "iacube.db::tables.Requisition._dictionary.SubcategoryTypes" As b
				ON a."SubcategoryId" = b."Id"
			LEFT JOIN "iacube.db::tables.Requisition._dictionary.PriorityTypes" AS c
				ON a."PriorityId" = c."Id"
			WHERE a."ReqId" = :reqId
	;
	skills =
		SELECT 
				"Skill",
				"IsPrimary",
				"Weight"
			FROM "iacube.db::tables.Requisition.Skills"
			WHERE "ReqId" = :reqId
	;
--proposed candidates
	CALL "iacube.db.procedures.textmining::getRelatedCandidates"(:reqId,20,relatedCandidates);
	
	reqCandidates = 
		SELECT 
				:reqId 									AS "ReqId",
				IFNULL(a."CandidateId",b."CandidateId") AS "CandidateId",
				IFNULL(a."ProfileId",b."ProfileId")		AS "ProfileId",
				IFNULL(a."score",b."Distance")			AS "Distance",
				b."StatusId",
				b."ChangedBy",
				b."ChangedAt",
				b."AssignedBy",
				b."AssignedAt"
			FROM :relatedCandidates AS a
			FULL OUTER JOIN	"iacube.db::tables.Requisition.Candidates" AS b
				ON  a."CandidateId" = b."CandidateId"
				AND a."ProfileId"   = b."ProfileId"
				AND b."ReqId" = :reqId
	;
	candidates = 
		SELECT
				a."CandidateId",
				a."StatusId",
				b."FirstName",
				b."LastName",
				a."AssignedBy",
				a."AssignedAt",
				a."ChangedBy",
				a."ChangedAt",
				a."ProfileId",
				a."Distance",
				SUM(c."Duration") / 12 AS "Experience",
				b."Photo"
			FROM  :reqCandidates AS a
			LEFT JOIN  "iacube.db::tables.Candidate.Candidates" AS b
				ON a."CandidateId"  = b."CandidateId"
			LEFT JOIN "iacube.db::tables.Profile.Experience" AS c
				ON a."ProfileId" = c."ProfileId"
			GROUP BY 
				a."CandidateId",
				a."StatusId",
				b."FirstName",
				b."LastName",
				a."AssignedBy",
				a."AssignedAt",
				a."ChangedBy",
				a."ChangedAt",
				a."ProfileId",
				a."Distance",
				b."Photo"
	;
	profiles = 
		SELECT 
				a."CandidateId",
				b."ProfileId",
				c."ExternalId",
				c."ProfileTypeId",
				c."Link",
				c."Headline"
			FROM :candidates AS a
			INNER JOIN "iacube.db::tables.Candidate.Profiles" AS b
				ON a."CandidateId" = b."CandidateId"
			INNER JOIN "iacube.db::tables.Profile.Profiles" AS c
				ON b."ProfileId" = c."ProfileId"
	;
	
	comments = 
		SELECT 
				"CommentId",
				"CommentTypeId",
				"CreatedAt",
				"CreatedBy",
				"Title",
				"Text",
				"CommentStatusId"
			FROM "iacube.db::tables.Requisition.Comments"
			WHERE "ReqId" = :reqId
	;
	commentTypes =
		SELECT 
				"Id" AS "id",
				"Name" AS "name"
			FROM "iacube.db::tables.Requisition._dictionary.CommentTypes"
	;
	commentStatusTypes =
		SELECT 
				"Id" AS "id",
				"Name" AS "name"
			FROM "iacube.db::tables.Requisition._dictionary.CommentStatusTypes"
	;
	priorityTypes = 
		SELECT 
				"Id" AS "id",
				"Name" AS "name"
			FROM "iacube.db::tables.Requisition._dictionary.PriorityTypes"
	;
	statusCodeTypes	=
		SELECT 
				"Id" AS "id",
				"Name" AS "name"
			FROM "iacube.db::tables.Requisition._dictionary.StatusCodeTypes"
	;
	statusTypes = 
		SELECT 
				"Id" AS "id",
				"Name" AS "name"
			FROM "iacube.db::tables.Requisition._dictionary.StatusTypes"
	;
	subcategoryTypes = 
		SELECT 
				"Id" AS "id",
				"Name" AS "name"
			FROM "iacube.db::tables.Requisition._dictionary.SubcategoryTypes"
	;

END;
