PROCEDURE "IACUBE"."iacube.db.procedures.candidate::searchCandidates"(
	--IN 	pageStart	 INTEGER,
	--IN 	pageEnd		 INTEGER,
	IN 	searchTerm	 NVARCHAR(1000),
	--IN 	filter		 "IACUBE"."iacube.db::types.nameValue"					  DEFAULT EMPTY,
	OUT candidates	 "IACUBE"."iacube.db::types.searchCandidatesCandidates"	  DEFAULT EMPTY,
	OUT profiles	 "IACUBE"."iacube.db::types.searchCandidatesProfiles"	  DEFAULT EMPTY,
	OUT salary		 "IACUBE"."iacube.db::types.searchCandidatesSalary"		  DEFAULT EMPTY,
	OUT contacts	 "IACUBE"."iacube.db::types.searchCandidatesContacts"	  DEFAULT EMPTY,
	OUT languages	 "IACUBE"."iacube.db::types.searchCandidatesLanguages"	  DEFAULT EMPTY,
	OUT requisitions "IACUBE"."iacube.db::types.searchCandidatesRequisitions" DEFAULT EMPTY
)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA IACUBE
	READS SQL DATA AS
BEGIN

	candidates = 
		SELECT
				a."CandidateId",
				a."LastName",
				a."FirstName",
				a."Location",
				a."ProfArea"
			FROM "iacube.db::tables.Candidate.Candidates" AS a
			WHERE CONTAINS (*,:searchTerm, FUZZY(0.8))
	;
	
	/*IF :pageStart IS NOT NULL and :pageEnd IS NOT NULL THEN
		candidates = 
			SELECT *
				FROM :candidates
				LIMIT  :pageStart
				OFFSET :pageEnd
		;
	END IF;*/

	profiles = 
		SELECT 
				a."CandidateId",
				b."ProfileId",
				c."ExternalId",
				c."ProfileTypeId",
				c."Link"
			FROM :candidates AS a
			INNER JOIN "iacube.db::tables.Candidate.Profiles" AS b
				ON a."CandidateId" = b."CandidateId"
			INNER JOIN "iacube.db::tables.Profile.Profiles" AS c
				ON b."ProfileId" = c."ProfileId"
			
	;
	
	salary = 
		SELECT 
				a."CandidateId",
				b."ProfileId",
				c."Salary",
				c."SalaryCurr"
			FROM :candidates AS a
			INNER JOIN "iacube.db::tables.Candidate.Profiles" AS b
				ON a."CandidateId" = b."CandidateId"
			INNER JOIN "iacube.db::tables.Profile.ProfileDetails" AS c
				ON b."ProfileId" = c."ProfileId"
			ORDER BY c."Salary"
	;
	
	contacts =
		SELECT 
				a."CandidateId",
				a."ContactTypeId",
				a."Value"
			FROM "iacube.db::tables.Candidate.Contacts" AS a
			INNER JOIN :candidates AS b
				ON a."CandidateId" = b."CandidateId"
	;
	
	languages = 
		SELECT
				a."CandidateId",
				a."LanguageId",
				a."LevelId"
			FROM "iacube.db::tables.Candidate.Languages" AS a
			INNER JOIN :candidates AS b
				ON a."CandidateId" = b."CandidateId"
	;
	
	requisitions = 
		SELECT 
				a."CandidateId",
				a."ReqId",
				c."Title",
				a."StatusId",
				a."AssignedBy",
				a."AssignedAt"
			FROM "iacube.db::tables.Requisition.Candidates" AS a
			INNER JOIN :candidates AS b
				ON a."CandidateId" = b."CandidateId"
			LEFT JOIN "iacube.db::tables.Requisition.Requisitions" AS c
				ON a."ReqId" = c."ReqId"
	;

END;
