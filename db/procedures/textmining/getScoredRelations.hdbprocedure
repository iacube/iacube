PROCEDURE "IACUBE"."iacube.db.procedures.textmining::getScoredRelations" (IN reqId INTEGER , IN topN SMALLINT,
   OUT scoredRelations "IACUBE"."iacube.db::types.scoredRelations" DEFAULT EMPTY)
   LANGUAGE SQLSCRIPT
   SQL SECURITY DEFINER
   READS SQL DATA AS
BEGIN
   DECLARE X INTEGER;
   -- DECLARE Y NVARCHAR(5000);   
/*   
   DECLARE CURSOR lc_X( z SMALLINT ) FOR SELECT T."EXTID", T.TOTAL_TERM_COUNT, T.SCORE
                     FROM TM_GET_RELATED_DOCUMENTS ( DOCUMENT IN FULLTEXT INDEX WHERE "EXTID" = (SELECT 1 FROM dummy) AND "EXTTYPE" = 'P' AND "DOCDIM" = 'S'
                                                     SEARCH "CONTENT" FROM "IACUBE"."iacube.db::tables.Document.Texts" 
                                                     WHERE "EXTTYPE"='P' AND "DOCDIM" = 'C'
                                                     RETURN TOP 10  "EXTID" ) AS T;
*/    
/*
   DECLARE CURSOR lc_X FOR SELECT T."EXTID", T.TOTAL_TERM_COUNT, T.SCORE
                       FROM TM_GET_RELATED_DOCUMENTS ( DOCUMENT IN FULLTEXT INDEX WHERE "EXTID" = (SELECT ID FROM "IACUBE"."iacube.db::tables.Document.Texts" WHERE ID=FF) AND "EXTTYPE" = 'P' AND "DOCDIM" = 'S'
                                                     SEARCH "CONTENT" FROM "IACUBE"."iacube.db::tables.Document.Texts" 
                                                     WHERE "EXTTYPE"='P' AND "DOCDIM" = 'C'
                                                     RETURN TOP 10  "EXTID" ) AS T;
*/
   X:=1;
--   Y:='Abc';
/*
   lt_profBySumScore=SELECT T."EXTID",  T.TOTAL_TERM_COUNT, T.SCORE
                     FROM TM_GET_RELATED_DOCUMENTS ( DOCUMENT (SELECT 1 from dummy) 
                                                     SEARCH "CONTENT" FROM "IACUBE"."iacube.db::tables.Document.Texts" 
                                                     WHERE "EXTTYPE"='P' AND "DOCDIM" = 'C'
                                                     RETURN TOP 10 "EXTID" ) AS T;
*/
/*   
   lt_profBySumScore=SELECT T."EXTID",  T.TOTAL_TERM_COUNT, T.SCORE
                     FROM TM_GET_RELATED_DOCUMENTS ( DOCUMENT (SELECT MIN("Id") FROM "IACUBE"."iacube.db::tables.Requisition.Requisitions" )
                                                     SEARCH "CONTENT" FROM "IACUBE"."iacube.db::tables.Document.Texts" 
                                                     WHERE "EXTTYPE"='P' AND "DOCDIM" = 'C'
                                                     RETURN TOP 10 "EXTID" ) AS T;
*/
/*   
   lt_profBySumScore=SELECT T."EXTID",  T.TOTAL_TERM_COUNT, T.SCORE
                     FROM TM_GET_RELATED_DOCUMENTS ( DOCUMENT (SELECT 'SAP' FROM DUMMY) LANGUAGE 'RU'
                                                     SEARCH "CONTENT" FROM "IACUBE"."iacube.db::tables.Document.Texts" 
                                                     WHERE "EXTTYPE"='P' AND "DOCDIM" = 'C'
                                                     RETURN TOP 10 "EXTID" ) AS T;
*/
/*   
   lt_profBySumScore=SELECT T."EXTID", T.TOTAL_TERM_COUNT, T.SCORE
                     FROM TM_GET_RELATED_DOCUMENTS ( DOCUMENT IN FULLTEXT INDEX WHERE "EXTID" = :FF AND "EXTTYPE" = 'P' AND "DOCDIM" = 'S'
                                                     SEARCH "CONTENT" FROM "IACUBE"."iacube.db::tables.Document.Texts" 
                                                     WHERE "EXTTYPE"='P' AND "DOCDIM" = 'C'
                                                     RETURN TOP 10  "EXTID" ) AS T;
                                                     
*/   
/*   
   lt_profBySumScore=SELECT T."EXTID",  T.TOTAL_TERM_COUNT, T.SCORE
                     FROM TM_GET_RELATED_DOCUMENTS ( DOCUMENT 'SAP'
                                                     SEARCH "CONTENT" FROM "IACUBE"."iacube.db::tables.Document.Texts" 
                                                     WHERE "EXTTYPE"='P' AND "DOCDIM" = 'C'
                                                     RETURN TOP 10 "EXTID" ) AS T;

*/

   lt_profBySumScore=SELECT T."EXTID", T.TOTAL_TERM_COUNT, T.SCORE
                     FROM TM_GET_RELATED_DOCUMENTS ( DOCUMENT IN FULLTEXT INDEX WHERE "EXTID" = 1 AND "EXTTYPE" = 'P' AND "DOCDIM" = 'C'
                                                     SEARCH "CONTENT" FROM "IACUBE"."iacube.db::tables.Document.Texts"
                                                     WHERE "EXTTYPE"='P' AND "DOCDIM" = 'C'
                                                     RETURN TOP 10 "EXTID" ) AS T;

   lt_profBySkillScore=SELECT T."EXTID", T.TOTAL_TERM_COUNT, T.SCORE
                       FROM TM_GET_RELATED_DOCUMENTS ( DOCUMENT IN FULLTEXT INDEX WHERE "EXTID" = :ReqId AND "EXTTYPE" = 'P' AND "DOCDIM" = 'S'
                                                       SEARCH "CONTENT" FROM "IACUBE"."iacube.db::tables.Document.Texts" 
                                                       WHERE "EXTTYPE"='P' AND "DOCDIM" = 'S'
                                                       RETURN TOP 10 "EXTID" ) AS T;
                                                       
/*
   lt_profFullTotalScore=SELECT A."EXTID" AS "SumProfile",A."SCORE" AS "SumScore",B."EXTID" AS "SkillProfile",B."SCORE" AS "SkillScore" 
                         FROM :lt_profBySumScore AS A 
                         FULL OUTER JOIN :lt_profBySkillScore AS B
                         ON A."EXTID"=B."EXTID"; 
*/                         
/*  
   lt_profTotScore=SELECT COALESCE(A."SumProfile",A."SkillProfile") AS "ProfileId",
                          SQRT(POWER(IFNULL(A."SumScore",0),2)+POWER(IFNULL(A."SkillScore",0),2)) AS "TotalScore"
                   FROM :lt_profFullTotalScore AS A;
                   
   lt_candidateProfileScored=SELECT A."ProfileId" AS "ProfileId", B."CandidateId" AS "CandidateId", A."TotalScore" AS "score"
                             FROM :lt_profTotScore AS A 
                             JOIN "IACUBE"."iacube.db::tables.Candidate.Profiles" AS B
                             ON A."ProfileId"=B."ProfileId"
                             ORDER BY A."TotalScore" DESC;
   relatedCandidates=SELECT TOP 10 "ProfileId", "CandidateId", "score" FROM :lt_candidateProfileScored;
*/
/*
  FOR ls_X AS lc_X DO
     Y='S';
  END FOR;
*/  
   lt_scoredRelations=SELECT :reqId AS "ReqId","EXTID" AS "DocExtId","SCORE" AS "RelScore" ,'CC' AS "RelDim" 
                      FROM :lt_profBySumScore
                      UNION ALL
                      SELECT :reqId AS "ReqId","EXTID" AS "DocExtId","SCORE" AS "RelScore" ,'SS' AS "RelDim" 
                      FROM :lt_profBySkillScore;
--  relatedCandidates=SELECT EXTID AS "ProfileId", 3 AS "CandidateId", "SCORE" AS "score" FROM :lt_profBySumScore;
--   relatedCandidates=SELECT EXTID AS "ProfileId", 2 AS "CandidateId", "SCORE" AS "score" FROM :lt_profBySkillScore;
--  relatedCandidates=SELECT 1 AS "ProfileId", 2 AS "CandidateId", 3 AS "score" FROM :lt_profFullTotalScore;
  scoredRelations=SELECT "DocExtId","RelScore","RelDim","ReqId" FROM :lt_scoredRelations;
END