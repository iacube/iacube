FUNCTION "IACUBE"."iacube.db.procedures.textmining::getRelatedCandidates"(reqId INTEGER, topN SMALLINT)
--RETURNS "IACUBE"."iacube.db::types.relatedCandidates"
RETURNS TABLE ("A" INTEGER)
LANGUAGE SQLSCRIPT
SQL SECURITY DEFINER AS
BEGIN
/*
   lt_profBySumScore=SELECT T."Id", T."ExtId", T."CONTENT", T.TOTAL_TERM_COUNT, T.SCORE
                     FROM TM_GET_RELATED_DOCUMENTS ( DOCUMENT IN FULLTEXT INDEX WHERE "ExtId" = reqId AND "ExtType" = 'R' AND "DocDim" = 'S'
                                                     SEARCH "CONTENT" FROM "IACUBE"."iacube.db::tables.Document.Texts" 
                                                     WHERE "ExtType"='P' AND "DocDim" = 'C'
                                                     RETURN TOP 10 "Id", "ExtId", "CONTENT" ) AS T;
   lt_profBySkillScore=SELECT T."Id", T."ExtId", T."CONTENT", T.TOTAL_TERM_COUNT, T.SCORE
                       FROM TM_GET_RELATED_DOCUMENTS ( DOCUMENT IN FULLTEXT INDEX WHERE "ExtId" = reqId AND "ExtType" = 'R' AND "DocDim" = 'S'
                                                       SEARCH "CONTENT" FROM "IACUBE"."iacube.db::tables.Document.Texts" 
                                                       WHERE "ExtType"='P' AND "DocDim" = 'C'
                                                       RETURN TOP 10 "Id", "ExtId", "CONTENT" ) AS T;

   lt_profFullTotalScore=SELECT A."ExtId" AS "SumProfile",A."SCORE" AS "SumScore",B."ExtId" AS "SkillProfile",B."SCORE" AS "SkillScore" 
                         FROM :lt_profBySumScore AS A 
                         FULL OUTER JOIN :lt_profBySkillScore AS B
                         ON A."ExtId"=B."ExtId"; 
  
   lt_profTotScore=SELECT COALESCE(A."SumProfile",A."SkillProfile") AS "ProfileId",
                          SQRT(POWER(IFNULL(A."SumScore",0),2)+POWER(IFNULL(A."SkillScore",0),2)) AS "TotalScore"
                   FROM :lt_profFullTotalScore AS A;
                   
   lt_candidateProfileScored=SELECT A."ProfileId" AS "ProfileId", B."CandidateId" AS "CandidateId", A."TotalScore" AS "score"
                             FROM :lt_profTotScore AS A 
                             JOIN "IACUBE"."iacube.db::tables.Candidate.Profiles" AS B
                             ON A."ProfileId"=B."ProfileId"
                             ORDER BY A."TotalScore" DESC;
   RETURN SELECT TOP 10 "ProfileId", "CandidateId", "score" FROM :lt_candidateProfileScored;
*/  
      RETURN SELECT 1 AS "A" FROM dummy;
END;
